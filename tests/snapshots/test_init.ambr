# serializer version: 1
# name: Test_Common_e2e.Test_Config_Migration.test_setup_v1_to_publish
  dict({
    'data': mappingproxy({
      'password': 'changeme',
      'timeout': 30,
      'url': 'http://mock_es_integration:9200',
      'username': 'hass_writer',
      'verify_ssl': False,
    }),
    'options': mappingproxy({
      'change_detection_enabled': True,
      'change_detection_type': list([
        'state',
        'attribute',
      ]),
      'exclude_targets': False,
      'include_targets': False,
      'polling_frequency': 60,
      'publish_frequency': 60,
      'tags': list([
      ]),
      'targets_to_exclude': dict({
      }),
      'targets_to_include': dict({
      }),
    }),
  })
# ---
# name: Test_Common_e2e.Test_Config_Migration.test_setup_v1_to_publish.1
  b'{"create":{"_index":"metrics-homeassistant.counter-default"}}\n{"@timestamp":"2023-04-12T12:00:00+00:00","event.action":"State change","event.kind":"event","event.type":"change","hass.entity.domain":"counter","hass.entity.id":"counter.entity_object_id","hass.entity.value":"value","hass.entity.valueas":{"string":"value"},"hass.entity.object.id":"entity_object_id","data_stream.type":"metrics","data_stream.dataset":"homeassistant.counter","data_stream.namespace":"default","hass.entity.area.floor.id":"entity_floor","hass.entity.area.floor.name":"entity floor","hass.entity.area.id":"entity_area","hass.entity.area.name":"entity area","hass.entity.labels":["entity label 1","entity label 2","entity label 3"],"hass.entity.friendly_name":"entity object id","hass.entity.platform":"entity platform","hass.entity.device.class":"entity device class","hass.entity.device.labels":["device label 1","device label 2","device label 3"],"hass.entity.device.name":"device name","hass.entity.device.area.floor.id":"device_floor","hass.entity.device.area.floor.name":"device floor","hass.entity.device.area.id":"device_area","hass.entity.device.area.name":"device area","agent.version":"1.0.0","host.architecture":"x86","host.os.name":"Linux","host.hostname":"my_es_host"}\n'
# ---
# name: Test_Common_e2e.Test_Pipeline_Settings.test_config_entry_to_pipeline_settings
  PipelineSettings(
    change_detection_type=list([
      'STATE',
      'ATTRIBUTE',
    ]),
    debug_filter=False,
    exclude_targets=True,
    excluded_areas=list([
      'exclude_bedroom',
    ]),
    excluded_devices=list([
      'exclude_cd454a1722a83415862249840b60b981',
    ]),
    excluded_entities=list([
      'sensor.exclude_100b_baker_st_2g',
      'sensor.exclude_u6_enterprise_entryway_memory_utilization',
    ]),
    excluded_labels=list([
      'exclude_test_label',
    ]),
    include_targets=True,
    included_areas=list([
      'include_bedroom',
    ]),
    included_devices=list([
      'include_cd454a1722a83415862249840b60b981',
    ]),
    included_entities=list([
      'sensor.include_100b_baker_st_2g',
      'sensor.include_u6_enterprise_entryway_memory_utilization',
    ]),
    included_labels=list([
      'include_test_label',
    ]),
    polling_frequency=60,
    publish_frequency=60,
    tags=list([
      'tags',
    ]),
  )
# ---
# name: Test_Common_e2e.test_setup_to_publish
  b'{"create":{"_index":"metrics-homeassistant.counter-default"}}\n{"@timestamp":"2023-04-12T12:00:00+00:00","event.action":"State change","event.kind":"event","event.type":"change","hass.entity.domain":"counter","hass.entity.id":"counter.entity_object_id","hass.entity.value":"value","hass.entity.valueas":{"string":"value"},"hass.entity.object.id":"entity_object_id","data_stream.type":"metrics","data_stream.dataset":"homeassistant.counter","data_stream.namespace":"default","hass.entity.area.floor.id":"entity_floor","hass.entity.area.floor.name":"entity floor","hass.entity.area.id":"entity_area","hass.entity.area.name":"entity area","hass.entity.labels":["entity label 1","entity label 2","entity label 3"],"hass.entity.friendly_name":"entity object id","hass.entity.platform":"entity platform","hass.entity.device.class":"entity device class","hass.entity.device.labels":["device label 1","device label 2","device label 3"],"hass.entity.device.name":"device name","hass.entity.device.area.floor.id":"device_floor","hass.entity.device.area.floor.name":"device floor","hass.entity.device.area.id":"device_area","hass.entity.device.area.name":"device area","agent.version":"1.0.0","host.architecture":"x86","host.os.name":"Linux","host.hostname":"my_es_host"}\n'
# ---
# name: Test_Config_Migration.test_config_migration_v1tov2
  dict({
    'after_data': dict({
      'publish_mode': 'Any changes',
      'url': 'http://migration-test:9200',
    }),
    'after_options': dict({
    }),
    'after_version': 2,
    'before_data': dict({
      'only_publish_changed': True,
      'url': 'http://migration-test:9200',
    }),
    'before_options': dict({
    }),
    'before_version': 1,
  })
# ---
# name: Test_Config_Migration.test_config_migration_v1tov7
  dict({
    'after_data': dict({
      'url': 'http://migration-test:9200',
    }),
    'after_options': dict({
      'change_detection_type': list([
        'state',
        'attribute',
      ]),
      'exclude_targets': False,
      'include_targets': False,
      'polling_frequency': 0,
      'publish_frequency': 60,
      'tags': list([
      ]),
      'targets_to_exclude': dict({
      }),
      'targets_to_include': dict({
      }),
    }),
    'after_version': 7,
    'before_data': dict({
      'excluded_domains': list([
      ]),
      'excluded_entities': list([
      ]),
      'health_sensor_enabled': True,
      'ilm_delete_after': '30d',
      'ilm_max_size': '10gb',
      'included_domains': list([
      ]),
      'included_entities': list([
      ]),
      'only_publish_changed': True,
      'publish_enabled': True,
      'publish_frequency': 60,
      'publish_mode': 'Any changes',
      'url': 'http://migration-test:9200',
    }),
    'before_options': dict({
    }),
    'before_version': 1,
  })
# ---
# name: Test_Config_Migration.test_config_migration_v2tov3
  dict({
    'after_data': dict({
      'url': 'http://migration-test:9200',
    }),
    'after_options': dict({
    }),
    'after_version': 3,
    'before_data': dict({
      'health_sensor_enabled': True,
      'url': 'http://migration-test:9200',
    }),
    'before_options': dict({
    }),
    'before_version': 2,
  })
# ---
# name: Test_Config_Migration.test_config_migration_v3tov4
  dict({
    'after_data': dict({
      'index_mode': 'index',
      'url': 'http://migration-test:9200',
    }),
    'after_options': dict({
    }),
    'after_version': 4,
    'before_data': dict({
      'ilm_delete_after': '30d',
      'ilm_max_size': '10gb',
      'url': 'http://migration-test:9200',
    }),
    'before_options': dict({
    }),
    'before_version': 3,
  })
# ---
# name: Test_Config_Migration.test_config_migration_v4tov5
  dict({
    'after_data': dict({
      'url': 'http://migration-test:9200',
    }),
    'after_options': dict({
      'excluded_domains': list([
      ]),
      'excluded_entities': list([
      ]),
      'included_domains': list([
      ]),
      'included_entities': list([
      ]),
      'publish_enabled': True,
      'publish_frequency': 60,
      'publish_mode': 'Any changes',
    }),
    'after_version': 5,
    'before_data': dict({
      'datastream_name_prefix': 'homeassistant',
      'datastream_namespace': 'default',
      'datastream_type': 'metrics',
      'excluded_domains': list([
      ]),
      'excluded_entities': list([
      ]),
      'included_domains': list([
      ]),
      'included_entities': list([
      ]),
      'publish_enabled': True,
      'publish_frequency': 60,
      'publish_mode': 'Any changes',
      'url': 'http://migration-test:9200',
    }),
    'before_options': dict({
    }),
    'before_version': 4,
  })
# ---
# name: Test_Config_Migration.test_config_migration_v5tov6
  dict({
    'after_data': dict({
      'url': 'http://migration-test:9200',
    }),
    'after_options': dict({
      'change_detection_type': list([
        'STATE',
        'ATTRIBUTE',
      ]),
      'excluded_domains': list([
      ]),
      'excluded_entities': list([
      ]),
      'included_domains': list([
      ]),
      'included_entities': list([
      ]),
      'polling_frequency': 60,
      'publish_frequency': 60,
    }),
    'after_version': 6,
    'before_data': dict({
      'url': 'http://migration-test:9200',
    }),
    'before_options': dict({
      'excluded_domains': list([
      ]),
      'excluded_entities': list([
      ]),
      'ilm_enabled': True,
      'ilm_policy_name': 'test policy',
      'included_domains': list([
      ]),
      'included_entities': list([
      ]),
      'index_format': 'test format',
      'index_mode': 'index',
      'publish_enabled': True,
      'publish_frequency': 60,
      'publish_mode': 'All',
    }),
    'before_version': 5,
  })
# ---
# name: Test_Config_Migration.test_config_migration_v5tov6.1
  dict({
    'after_data': dict({
      'url': 'http://migration-test:9200',
    }),
    'after_options': dict({
      'change_detection_type': list([
        'STATE',
      ]),
      'excluded_domains': list([
      ]),
      'excluded_entities': list([
      ]),
      'included_domains': list([
      ]),
      'included_entities': list([
      ]),
      'polling_frequency': 0,
      'publish_frequency': 60,
    }),
    'after_version': 6,
    'before_data': dict({
      'url': 'http://migration-test:9200',
    }),
    'before_options': dict({
      'excluded_domains': list([
      ]),
      'excluded_entities': list([
      ]),
      'ilm_enabled': True,
      'ilm_policy_name': 'test policy',
      'included_domains': list([
      ]),
      'included_entities': list([
      ]),
      'index_format': 'test format',
      'index_mode': 'index',
      'publish_enabled': True,
      'publish_frequency': 60,
      'publish_mode': 'State changes',
    }),
    'before_version': 5,
  })
# ---
# name: Test_Config_Migration.test_config_migration_v6tov7
  dict({
    'after_data': dict({
      'url': 'http://migration-test:9200',
    }),
    'after_options': dict({
      'change_detection_type': list([
        'state',
      ]),
      'exclude_targets': False,
      'include_targets': False,
      'polling_frequency': 0,
      'publish_frequency': 60,
      'tags': list([
      ]),
      'targets_to_exclude': dict({
      }),
      'targets_to_include': dict({
      }),
    }),
    'after_version': 7,
    'before_data': dict({
      'url': 'http://migration-test:9200',
    }),
    'before_options': dict({
      'change_detection_type': list([
        'STATE',
      ]),
      'excluded_domains': list([
      ]),
      'excluded_entities': list([
      ]),
      'included_domains': list([
      ]),
      'included_entities': list([
      ]),
      'polling_frequency': 0,
      'publish_frequency': 60,
    }),
    'before_version': 6,
  })
# ---
# name: Test_Config_Migration.test_config_migration_v6tov7.1
  dict({
    'after_data': dict({
      'url': 'http://migration-test:9200',
    }),
    'after_options': dict({
      'change_detection_type': list([
        'state',
      ]),
      'exclude_targets': True,
      'include_targets': True,
      'polling_frequency': 0,
      'publish_frequency': 60,
      'tags': list([
      ]),
      'targets_to_exclude': dict({
        'entity_id': list([
          'tomato',
        ]),
      }),
      'targets_to_include': dict({
        'entity_id': list([
          'potato',
        ]),
      }),
    }),
    'after_version': 7,
    'before_data': dict({
      'url': 'http://migration-test:9200',
    }),
    'before_options': dict({
      'change_detection_type': list([
        'STATE',
      ]),
      'excluded_domains': list([
      ]),
      'excluded_entities': list([
        'tomato',
      ]),
      'included_domains': list([
      ]),
      'included_entities': list([
        'potato',
      ]),
      'polling_frequency': 0,
      'publish_frequency': 60,
    }),
    'before_version': 6,
  })
# ---
