{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Elasticsearch Component for Home-Assistant","text":"<p>Publish Home Assistant events to your Elasticsearch cluster!</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Efficiently publishes Home-Assistant events to Elasticsearch using the Bulk API</li> <li>Automatically sets up Datastreams using Time Series Data Streams (\"TSDS\") and Datastream Lifecycle Management (\"DLM\")</li> <li>Supports Elastic's stack security features via optional username, password, and API keys</li> <li>Selectively publish events based on labels, entities, devices, or areas</li> </ul>"},{"location":"#compatibility","title":"Compatibility","text":"<ul> <li>Elasticsearch 8.14+ (Self, Cloud, or Serverless).</li> <li>Elastic Common Schema version 1.0.0</li> <li>Home Assistant Community Store</li> <li>Home Assistant &gt;= 2025.6</li> </ul>"},{"location":"#older-versions","title":"Older versions","text":"<p>Version <code>1.0.0</code> includes support for 7.11 to 8.13. No features or bugfixes will be backported to this version. Version <code>0.4.0</code> includes support for versions of Elasticsearch older than 7.11. No features or bugfixes will be backported to this version.</p>"},{"location":"configure/","title":"Configuration","text":""},{"location":"configure/#gather-elasticsearch-details","title":"Gather Elasticsearch details","text":"<p>You will need the following details to configure the Elasticsearch integration:</p> <ol> <li>The URL of your Elasticsearch instance</li> <li>Credentials to access the Elasticsearch instance (if required)</li> <li>The SSL certificate authority (CA) file, if you are using a custom CA not trusted by the host system</li> </ol>"},{"location":"configure/#credentials","title":"Credentials","text":"<p>You must provide credentials if your Elasticsearch instance is secured. While we support authenticating via username/password, we recommend using API Keys for simplicity and compatibility with all versions of Elasticsearch.</p> <p>Use the following command to create an API Key for the Home Assistant component.:</p> curlDev Tools <pre><code>curl https://localhost:9200/_security/api_key \\ # (1)\n  -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -u elastic:changeme \\ # (2)\n  -d'\n  {\n    \"name\": \"home_assistant_component\",\n    \"role_descriptors\": {\n      \"hass_writer\": {\n        \"cluster\": [\n          \"manage_index_templates\",\n          \"monitor\"\n        ],\n        \"indices\": [\n          {\n            \"names\": [\n              \"metrics-homeassistant.*\"\n            ],\n            \"privileges\": [\n              \"manage\",\n              \"index\",\n              \"create_index\",\n              \"create\"\n            ]\n          }\n        ]\n      }\n    }\n  }\n'\n</code></pre> <ol> <li>Replace <code>https://localhost:9200</code> with the URL of your Elasticsearch instance.</li> <li>Replace <code>elastic:changeme</code> with your Elasticsearch credentials.</li> </ol> <pre><code>POST /_security/api_key\n{\n  \"name\": \"home_assistant_component\",\n  \"role_descriptors\": {\n    \"hass_writer\": {\n      \"cluster\": [\n        \"manage_index_templates\",\n        \"monitor\"\n      ],\n      \"indices\": [\n        {\n          \"names\": [\n            \"metrics-homeassistant.*\"\n          ],\n          \"privileges\": [\n            \"manage\",\n            \"index\",\n            \"create_index\",\n            \"create\"\n          ]\n        }\n      ]\n    }\n  }\n}\n</code></pre> <p>The API Key will be returned in the response. Save the <code>encoded</code> field for use in the configuration.</p> <p>Read the Elasticsearch documentation for more information on creating API Keys.</p>"},{"location":"configure/#add-the-integration","title":"Add the integration","text":"<p>This component is configured interactively via Home Assistant's integration configuration page.</p> <ol> <li>Verify you have restarted Home Assistant after installing the component.</li> <li>From the <code>Integrations</code> configuration menu, add a new <code>Elasticsearch</code> integration.</li> <li>Provide the URL of your elasticsearch server in the format <code>https://&lt;host&gt;:&lt;port&gt;</code>. For example, <code>https://localhost:9200</code>.</li> <li>If your Elasticsearch instance is untrusted, you will be prompted to provide the path to the CA file or disable certificate verification.</li> <li>If your Elasticsearch instance is secured, you will be prompted to provide either a username and password or an API Key.</li> <li>Once the integration is setup, you may tweak all configuration options via the <code>Configure</code> button on the integrations page.</li> </ol>"},{"location":"configure/#configuration-options","title":"Configuration options","text":"<p>Select <code>Configure</code> from the integration's homepage to configure the following settings.</p> <p></p>"},{"location":"configure/#send-events-to-elasticsearch-at-this-interval","title":"Send events to Elasticsearch at this interval","text":"<p>The frequency at which events are published to Elasticsearch, in seconds. The default is <code>60</code>.</p>"},{"location":"configure/#gather-all-entity-states-at-this-interval","title":"Gather all entity states at this interval","text":"<p>The frequency at which all entity states are gathered, in seconds. The default is <code>60</code>.</p>"},{"location":"configure/#choose-what-types-of-entity-changes-to-listen-for-and-publish","title":"Choose what types of entity changes to listen for and publish","text":"<p>There are two types of entity changes that can be published to Elasticsearch: - <code>Track entities with state changes</code> - Publish entities when their state changes - <code>Track entities with attribute changes</code> - Publish entities when their attributes change</p> <p>Enabling both options will publish entities when either their state or attributes change.</p>"},{"location":"configure/#tags-to-apply-to-all-published-events","title":"Tags to apply to all published events","text":"<p>Tags are values that can be used to filter events in Elasticsearch. You can use this to add tags to all published events.</p>"},{"location":"configure/#toggle-to-only-publish-the-set-of-targets-below","title":"Toggle to only publish the set of targets below","text":"<p>Pick area, device, entity, or labels and only publish events from one of these targets. If you select multiple targets, events that match any of the targets will be published. If you select no targets, all events will be published.</p>"},{"location":"configure/#toggle-to-exclude-publishing-the-set-of-targets-below","title":"Toggle to exclude publishing the set of targets below","text":"<p>Pick area, device, entity, or labels and exclude events from one of these targets. If you select multiple targets, events that match any of the targets will be excluded. If you also configure <code>Toggle to only publish the set of targets below</code>, the exclusion will be applied after the inclusion.</p>"},{"location":"configure/#advanced-configuration","title":"Advanced configuration","text":""},{"location":"configure/#custom-certificate-authority-ca","title":"Custom certificate authority (CA)","text":"<p>This component will use the system's default certificate authority (CA) bundle to verify the Elasticsearch server's certificate. If you need to use a custom CA, you can provide the path to the CA file in the integration configuration.</p> <ol> <li>Place the CA file somewhere within Home Assistant's <code>configuration</code> directory.</li> <li>Follow the steps above to add the integration.</li> <li>After providing connection details, the component will attempt to establish a connection to the Elasticsearch server. If the server's certificate is not signed by a known CA, you will be prompted for the CA file's path.</li> <li>Provide the path to the CA file and continue with the setup.</li> </ol> <p>Note</p> <p>You can choose to bypass certificate verification during setup, if you do not have the CA file available.</p>"},{"location":"ingest_advanced/","title":"Advanced ingest configuration","text":"<p>Note</p> <p>This section describes advanced use cases. Most users will not need to customize their ingest configuration.</p>"},{"location":"ingest_advanced/#defining-your-own-index-mappings-settings-and-ingest-pipeline","title":"Defining your own Index Mappings, Settings, and Ingest Pipeline","text":"<p>You can customize the mappings, settings and define an ingest pipeline by creating a component template called <code>metrics-homeassistant@custom</code></p>"},{"location":"ingest_advanced/#custom-ingest-pipeline","title":"Custom Ingest Pipeline","text":"<p>The following is an example on how to push your Home Assistant metrics into an ingest pipeline called <code>metrics-homeassistant-pipeline</code>:</p> Dev Toolscurl <p>Run these commands using Kibana's Dev Tools console:</p> <pre><code>PUT _ingest/pipeline/metrics-homeassistant-pipeline\n{\n    \"description\": \"Pipeline for HomeAssistant dataset\",\n    \"processors\": [ ]\n}\n</code></pre> <pre><code>PUT _component_template/metrics-homeassistant@custom\n{\n    \"template\": {\n        \"mappings\": {}\n        \"settings\": {\n            \"index.default_pipeline\": \"metrics-homeassistant-pipeline\",\n        }\n    }\n}\n</code></pre> <pre><code>ES_URL=https://localhost:9200 # (1)\nES_USER=elastic # (2)\nES_PASSWORD=changeme # (3)\ncurl -X PUT \"$ES_URL/_ingest/pipeline/metrics-homeassistant-pipeline\" \\\n    -u \"$ES_USER\":\"ES_PASSWORD\" \\\n    -H \"Content-Type: application/json\" \\\n    -d'\n    {\n        \"description\": \"Pipeline for HomeAssistant dataset\",\n        \"processors\": [ ]\n    }\n    ' # (4)\n\ncurl -X PUT \"$ES_URL/_component_template/metrics-homeassistant@custom\" \\\n    -u \"$ES_USER\":\"ES_PASSWORD\" \\\n    -H \"Content-Type: application/json\" \\\n    -d'\n    {\n        \"template\": {\n            \"mappings\": {}\n            \"settings\": {\n                \"index.default_pipeline\": \"metrics-homeassistant-pipeline\",\n            }\n        }\n    }\n    '\n</code></pre> <ol> <li>Replace <code>https://localhost:9200</code> with the URL of your Elasticsearch instance</li> <li>Replace <code>elastic</code> with your Elasticsearch username</li> <li>Replace <code>changeme</code> with your Elasticsearch password</li> <li>Add your ingest pipeline processors to the <code>processors</code> array</li> </ol> <p>Component template changes apply when the datastream performs a rollover so the first time you modify the template you may need to manually initiate index/datastream rollover to start applying the pipeline.</p>"},{"location":"ingest_advanced/#custom-attribute-mappings","title":"Custom Attribute mappings","text":"<p>The following is an example on how to provide custom mappings for any attributes you're interested in making available as other data types <code>metrics-homeassistant-pipeline</code>:</p> Dev Toolscurl <p>Run these commands using Kibana's Dev Tools console:</p> <pre><code>PUT /_component_template/metrics-homeassistant@custom\n{\n    \"template\": {\n        \"mappings\": {\n            \"properties\": {\n                \"hass.entity.attributes\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"temperature\": {\n                            \"type\": \"float\"\n                            \"ignore_malformed\": true\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre> <pre><code>ES_URL=https://localhost:9200 # (1)\nES_USER=elastic # (2)\nES_PASSWORD=changeme # (3)\n\ncurl -X PUT \"$ES_URL/_component_template/metrics-homeassistant@custom\" \\\n    -u \"$ES_USER\":\"ES_PASSWORD\" \\\n    -H \"Content-Type: application/json\" \\\n    -d'\n    {\n        \"template\": {\n            \"mappings\": {\n                \"properties\": {\n                    \"hass.entity.attributes\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"temperature\": {\n                                \"type\": \"float\"\n                                \"ignore_malformed\": true\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    '\n</code></pre> <ol> <li>Replace <code>https://localhost:9200</code> with the URL of your Elasticsearch instance</li> <li>Replace <code>elastic</code> with your Elasticsearch username</li> <li>Replace <code>changeme</code> with your Elasticsearch password</li> <li>Modify the body of the component template to include desired mappings</li> </ol>"},{"location":"install/","title":"Installation","text":""},{"location":"install/#hacs-recommended","title":"HACS (recommended)","text":"<p>This component is available in HACS (Home Assistant Community Store).</p> <ol> <li>Install HACS if you don't have it already</li> <li>Open HACS in Home Assistant</li> <li>Go to \"Integrations\" section</li> <li>Click button with \"+\" icon</li> <li>Search for \"Elasticsearch\"</li> </ol>"},{"location":"install/#manual","title":"Manual","text":"<ol> <li>Download the latest release from the releases page</li> <li>Extract the contents of the zip file</li> <li>Copy the <code>custom_components</code> directory to your <code>$HASS_CONFIG/custom_components</code> directory, where <code>$HASS_CONFIG</code> is the location on your machine where Home-Assistant lives. Example: <code>/home/pi/.homeassistant</code> and <code>/home/pi/.homeassistant/custom_components</code>. You may have to create the <code>custom_components</code> directory yourself.</li> </ol> <p>You must restart Home Assistant after installation.</p> <p>Next: Configuration</p>"},{"location":"using_kibana/","title":"Using Kibana","text":"<p>The integration will put data into Elasticsearch under the <code>metrics-homeassistant.*</code> data stream. To explore your data, create visualizations, or dashboards in Kibana you first need to create a Data View.</p>"},{"location":"using_kibana/#create-a-data-view","title":"Create a data view","text":"Kibana UIcurlDev Tools <p>Create a Data View using Kibana's UI:</p> <ol> <li>Open Kibana</li> <li>Using the instructions in the Kibana documentation, navigate to the <code>Data views</code> page, and create a data view with the following values:<ul> <li>Name: <code>Home Assistant Metrics</code></li> <li>Index pattern: <code>metrics-homeassistant.*</code></li> <li>Timestamp field: <code>@timestamp</code></li> </ul> </li> </ol> <p>Create a Data View using <code>curl</code> and Kibana's Data views API:</p> <pre><code>KIBANA_URL=http://localhost:5601 # (1)\nKIBANA_USER=elastic # (2)\nKIBANA_PASSWORD=changeme # (3)\ncurl -X POST \"$KIBANA_URL/api/data_views/data_view\" \\\n    -u \"$KIBANA_USER\":\"KIBANA_PASSWORD\" \\\n    -H \"Content-Type: application/json\" \\\n    -H \"kbn-xsrf: true\" \\\n    -d'\n    {\n        \"data_view\": {\n            \"title\": \"metrics-homeassistant.*\",\n            \"name\": \"Home Assistant Metrics\",\n            \"timeFieldName\": \"@timestamp\"\n        }\n    }\n    '\n</code></pre> <ol> <li>Replace <code>http://localhost:5601</code> with the URL of your Kibana instance</li> <li>Replace <code>elastic</code> with your Kibana username</li> <li>Replace <code>changeme</code> with your Kibana password</li> </ol> <p>Create a Data View using Kibana's Dev Tools console:</p> <pre><code>POST kbn:/api/data_views/data_view\n{\n    \"data_view\": {\n        \"title\": \"metrics-homeassistant.*\",\n        \"name\": \"Home Assistant Metrics\",\n        \"timeFieldName\": \"@timestamp\"\n    }\n}\n</code></pre>"},{"location":"using_kibana/#exploring-home-assistant-data-in-kibana","title":"Exploring Home Assistant data in Kibana","text":"<p>Once you have created a Data View, you can start exploring your Home Assistant data in Kibana using <code>Discover</code>:</p> <ol> <li>In Kibana select <code>Discover</code></li> <li>Select the <code>Home Assistant Metrics</code> Data View at the top left</li> <li>You can now see all the Home Assistant data that has been published to Elasticsearch</li> <li>You can filter the data using the filter bar at the top</li> <li>You can pull specific fields into the document table at the bottom by clicking on the <code>+</code> icon next to a field</li> <li>You can change the time range of the data you are viewing using the time picker in the top right</li> </ol> <p></p>"},{"location":"using_kibana/#viewing-home-assistant-data-in-kibana","title":"Viewing Home Assistant data in Kibana","text":"<p>When creating new visualizations you may find the following fields useful:</p> Field Description <code>@timestamp</code> The timestamp of the event (ex. <code>Apr 10, 2024 @ 16:23:25.878</code>) <code>hass.entity.attributes.friendly_name</code> The name of the entity in Home Assistant (ex. <code>Living Room EcoBee Temperature</code>) <code>hass.entity.device.area.name</code> The area of the device in Home Assistant (ex. <code>Living Room</code>) <code>hass.entity.id</code> The entity id of the entity in Home Assistant (ex. <code>sensor.living_room_ecobee_temperature</code>) <code>hass.entity.value</code> The state of the entity in Home Assistant (ex. <code>72.5</code>), as a string-typed value <code>hass.entity.valueas.integer</code> The state of the entity in Home Assistant (ex. <code>72</code>), as an integer-typed value <code>hass.entity.valueas.float</code> The state of the entity in Home Assistant (ex. <code>72.5</code>), as a float-typed value <code>hass.entity.valueas.boolean</code> The state of the entity in Home Assistant (ex. <code>true</code>), as a boolean-typed value <code>hass.entity.valueas.date</code> The state of the entity in Home Assistant (ex. <code>2024-04-10</code>), as a date-typed value <code>hass.entity.valueas.datetime</code> The state of the entity in Home Assistant (ex. <code>2024-04-10T16:23:25.878</code>), as a datetime-typed value <code>hass.entity.valueas.time</code> The state of the entity in Home Assistant (ex. <code>16:23:25.878</code>), as a time-typed value <p>To build a visualization that shows the temperature of a specific entity over time, you can use the following steps:</p> <ol> <li>In Kibana select <code>Visualizations</code> and create a new Lens visualization</li> <li>Select <code>Home Assistant Metrics</code></li> <li>For the <code>Horizontal axis</code> select <code>@timestamp</code></li> <li>For the <code>Vertical axis</code> select <code>hass.entity.valueas.float</code></li> <li>In the filter bar at the top, add a filter for <code>hass.entity.id</code> and set the value to the entity id of the entity you want to visualize (ex. <code>sensor.living_room_ecobee_temperature</code>) or <code>hass.entity.attributes.friendly_name</code> and set the value to the friendly name of the entity you want to visualize (ex. <code>Living Room EcoBee Temperature</code>)</li> </ol> <p></p>"},{"location":"using_kibana/#inspiration","title":"Inspiration","text":""},{"location":"using_kibana/#hvac-usage","title":"HVAC Usage","text":"<p>Graph your home's climate and HVAC Usage:</p> <p></p>"},{"location":"using_kibana/#weather-station","title":"Weather Station","text":"<p>Visualize and alert on data from your weather station:</p> <p></p> <p></p>"},{"location":"using_kibana/#additional-examples","title":"Additional examples","text":"<p>Some usage examples inspired by real users:</p> <ul> <li>Utilizing a Raspberry Pi in kiosk mode with a 15\" display, the homeassistant-elasticsearch integration enables the creation of rotating fullscreen Elasticsearch Canvas. Those canvas displays metrics collected from various Home Assistant integrations, offering visually dynamic and informative dashboards for monitoring smart home data.</li> <li>To address temperature maintenance issues in refrigerators and freezers, temperature sensors in each appliance report data to Home Assistant, which is then published to Elasticsearch. Kibana's alerting framework is employed to set up rules that notify the user if temperatures deviate unfavorably for an extended period. The Elastic rule engine and aggregations simplify the monitoring process for this specific use case.</li> <li>Monitoring the humidity and temperature in a snake enclosure/habitat for a user's daughter, the integration facilitates the use of Elastic's Alerting framework. This choice is motivated by the framework's suitability for the monitoring requirements, providing a more intuitive solution compared to Home Assistant automations.</li> <li>The integration allows users to maintain a smaller subset of data, focusing on individual stats of interest, for an extended period. This capability contrasts with the limited retention achievable with Home Assistant and databases like MariaDB/MySQL. This extended data retention facilitates very long-term trend analysis, such as for weather data, enabling users to glean insights over an extended timeframe.</li> </ul>"}]}