# The contents of this file is based on https://github.com/home-assistant/core/blob/dev/pyproject.toml

target-version = "py312"
line-length = 110

lint.select = ["ALL"]

lint.ignore = [
    "C415", # No imports outside top level
    "D202", # No blank lines allowed after function docstring
    "D203", # 1 blank line required before class docstring
    "D213", # Multi-line docstring summary should start at the second line
    "D404", # First word of the docstring should not be This
    "D406", # Section name should end with a newline
    "D407", # Section name underlining
    "D411", # Missing blank line before section
    "E501", # line too long
    "E731", # do not assign a lambda expression, use a def
    "T201", # `print` found
    "ANN101", # Missing type annotation for self
    "ANN102", # Missing type annotation for cls
    "FBT001", # allow Boolean type positional argument
    "FBT002", # allow Boolean type default argument
    "ANN003", # Type annotation for kwargs
    "ANN002", # Type annotation for args
    "PLR0913", # Too many arguments in function definition
    "ISC001", # Checks for implicitly concatenated strings on a single line.
]

[lint.per-file-ignores]
"tests/**/*.py" = [
    # at least this three should be fine in tests:
    "S101", # asserts allowed in tests...
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    # The below are debateable
    "PLR2004", # Magic value used in comparison, ...
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
    "SLF001",
    "TRY003",
    "ANN201",
    "ANN001",
    "PLR0913",
    "ANN101",
    "N801",
    "PT011",
    "PT004",
    "N806",
    "ANN202"
]

[lint.flake8-pytest-style]
fixture-parentheses = false

[lint.pyupgrade]
keep-runtime-typing = true

[lint.mccabe]
max-complexity = 25
